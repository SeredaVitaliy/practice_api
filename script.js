'use strict';

const btn = document.querySelector('.btn-country');
const countriesContainer = document.querySelector('.countries');

// NEW COUNTRIES API URL (use instead of the URL shown in videos):
// https://restcountries.com/v2/name/portugal

// NEW REVERSE GEOCODING API URL (use instead of the URL shown in videos):
// https://api.bigdatacloud.net/data/reverse-geocode-client?latitude=${lat}&longitude=${lng}
const getCountryData = function (country) {
  const request = new XMLHttpRequest(); //–¥–∞–ª–µ–µ –Ω–∞–º –Ω—É–∂–∂–µ–Ω url –ø–æ –∫–æ—Ç–æ—Ä–æ–º—É –±—É–¥–µ–º –≤—ã–ø–æ–ª–Ω—è—Ç—å –≤—ã–∑–æ–≤ ajax
  request.open('GET', `https://restcountries.com/v3.1/name/${country}`); //1 - —Ç–∏–ø –∑–∞–ø—Ä–æ—Å–∞(–¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö get, 2 - —Å—Ç—Ä–æ–∫–∞, —Å–æ–¥–µ—Ä–∂–∞—â–∞—è—å url –∞–¥—Ä–µ—Å, –ø–æ –∫–æ—Ç–æ—Ä–æ–º—É –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –≤—ã–ø–æ–ª–Ω–µ–Ω –≤—ã–∑–æ–≤ ajax)

  //–æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–ø—Ä–æ—Å–∞
  request.send();

  //—Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞—Ç–Ω–æ–≥–æ –≤—ã–∑–æ–≤–∞ –æ–±—ä–µ–∫—Ç–∞ –∑–∞–ø—Ä–æ—Å–∞ –¥–ª—è —Å–æ–±—ã—Ç–∏—è –∑–∞–≥—Ä—É–∑–∫–∏
  request.addEventListener('load', function () {
    //   console.log(this.responseText);

    //–ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ json –≤ —Ä–µ–∞–ª—å–Ω—ã–π –æ–±—ä–µ–∫—Ç js
    const [data] = JSON.parse(this.responseText);
    console.log(data);

    const html = `<article class="country">
          <img class="country__img" src="${data.flags.svg}" />
          <div class="country__data">
            <h3 class="country__name">${data.name.common}</h3>
            <h4 class="country__region">${data.region}</h4>
            <p class="country__row"><span>üë´</span>${(
              +data.population / 1000000
            ).toFixed(1)} people</p>
            <p class="country__row"><span>üó£Ô∏è</span>${
              Object.values(data.languages)[0]
            }</p>
            <p class="country__row"><span>üí∞</span>${
              Object.values(data.currencies)[0].name
            }</p>
          </div>
        </article>`;

    countriesContainer.insertAdjacentHTML('beforeend', html);
    countriesContainer.style.opacity = 1;
  });
};

getCountryData('russia');
getCountryData('usa');
getCountryData('germany');
getCountryData('kazakhstan');
