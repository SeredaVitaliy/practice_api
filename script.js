'use strict';

const btn = document.querySelector('.btn-country');
const countriesContainer = document.querySelector('.countries');

// NEW COUNTRIES API URL (use instead of the URL shown in videos):
// https://restcountries.com/v2/name/portugal

// NEW REVERSE GEOCODING API URL (use instead of the URL shown in videos):
// https://api.bigdatacloud.net/data/reverse-geocode-client?latitude=${lat}&longitude=${lng}
// const getCountryData = function (country) {
//   const request = new XMLHttpRequest(); //–¥–∞–ª–µ–µ –Ω–∞–º –Ω—É–∂–∂–µ–Ω url –ø–æ –∫–æ—Ç–æ—Ä–æ–º—É –±—É–¥–µ–º –≤—ã–ø–æ–ª–Ω—è—Ç—å –≤—ã–∑–æ–≤ ajax
//   request.open('GET', `https://restcountries.com/v3.1/name/${country}`); //1 - —Ç–∏–ø –∑–∞–ø—Ä–æ—Å–∞(–¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö get, 2 - —Å—Ç—Ä–æ–∫–∞, —Å–æ–¥–µ—Ä–∂–∞—â–∞—è—å url –∞–¥—Ä–µ—Å, –ø–æ –∫–æ—Ç–æ—Ä–æ–º—É –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –≤—ã–ø–æ–ª–Ω–µ–Ω –≤—ã–∑–æ–≤ ajax)

//   //–æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–ø—Ä–æ—Å–∞
//   request.send();

//   //—Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞—Ç–Ω–æ–≥–æ –≤—ã–∑–æ–≤–∞ –æ–±—ä–µ–∫—Ç–∞ –∑–∞–ø—Ä–æ—Å–∞ –¥–ª—è —Å–æ–±—ã—Ç–∏—è –∑–∞–≥—Ä—É–∑–∫–∏
//   request.addEventListener('load', function () {
//     //   console.log(this.responseText);

//     //–ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ json –≤ —Ä–µ–∞–ª—å–Ω—ã–π –æ–±—ä–µ–∫—Ç js
//     const [data] = JSON.parse(this.responseText);
//     console.log(data);

//     const html = `<article class="country">
//           <img class="country__img" src="${data.flags.svg}" />
//           <div class="country__data">
//             <h3 class="country__name">${data.name.common}</h3>
//             <h4 class="country__region">${data.region}</h4>
//             <p class="country__row"><span>üë´</span>${(
//               +data.population / 1000000
//             ).toFixed(1)} people</p>
//             <p class="country__row"><span>üó£Ô∏è</span>${
//               Object.values(data.languages)[0]
//             }</p>
//             <p class="country__row"><span>üí∞</span>${
//               Object.values(data.currencies)[0].name
//             }</p>
//           </div>
//         </article>`;

//     countriesContainer.insertAdjacentHTML('beforeend', html);
//     countriesContainer.style.opacity = 1;
//   });
// };

// getCountryData('russia');
// // getCountryData('usa');
// // getCountryData('germany');
// // getCountryData('kazakhstan');

// //—Å–æ–∑–¥–∞–Ω–∏–µ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –≤—ã–∑–æ–≤–æ–≤. –ß—Ç–æ–±—ã –≤—Ç–æ—Ä–æ–π –≤—ã–∑–æ–≤ –∑–∞–ø—É—Å–∫–∞–ª—Å—è —Å—Ç—Ä–æ–≥–æ –ø–æ—Å–ª–µ –≤—Ç–æ—Ä–æ–≥–æ

const renderCountry = function (data, className = '') {
  const html = `<article class="country ${className}">
          <img class="country__img" src="${data.flags.svg}" />
          <div class="country__data">
            <h3 class="country__name">${data.name.common}</h3>
            <h4 class="country__region">${data.region}</h4>
            <p class="country__row"><span>üë´</span>${(
              +data.population / 1000000
            ).toFixed(1)} people</p>
            <p class="country__row"><span>üó£Ô∏è</span>${
              Object.values(data.languages)[0]
            }</p>
            <p class="country__row"><span>üí∞</span>${
              Object.values(data.currencies)[0].name
            }</p>
          </div>
        </article>`;

  countriesContainer.insertAdjacentHTML('beforeend', html);
  countriesContainer.style.opacity = 1;
};

const getCountryAndNeighbour = function (country) {
  //AJAX –≤—ã–∑—ã–≤–∞–µ—Ç —Å—Ç—Ä–∞–Ω—É 1
  const request = new XMLHttpRequest();
  request.open('GET', `https://restcountries.com/v3.1/name/${country}`);
  request.send();

  request.addEventListener('load', function () {
    const [data] = JSON.parse(this.responseText);
    console.log(data);

    //–æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å—Ç—Ä–∞–Ω—ã 1
    renderCountry(data);

    //—Å–æ—Å–µ–¥–Ω—è—è —Å—Ç—Ä–∞–Ω–∞ 2
    const [neighbour] = data.borders;

    //–¥–ª—è —Å—Ç—Ä–∞–Ω –±–µ–∑ —Å–æ–≤–º–µ—Å—Ç–Ω–æ–π –≥—Ä–∞–Ω–∏—Ü—ã
    if (!neighbour) return;

    //AJAX –≤—ã–∑—ã–≤–∞–µ—Ç —Å—Ç—Ä–∞–Ω—É 2
    const request2 = new XMLHttpRequest();
    request2.open('GET', `https://restcountries.com/v3.1/alpha/${neighbour}`);
    request2.send();

    request2.addEventListener('load', function () {
      const [data2] = JSON.parse(this.responseText);
      //   console.log(this.responseText);
      console.log(data2);

      renderCountry(data2, 'neighbour');
    });
  });
};

getCountryAndNeighbour('russia');
